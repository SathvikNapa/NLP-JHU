# Symbols in the grammar are case-sensitive.
# 
# This grammar uses a convention that
# - terminals are usually lowercase  (president)
# - preterminals are capitalized     (Noun)
#    - other nonterminals are all-caps  (NP)
# 
# This convention just makes grammars more readable to humans.  Thus:
#
#    - When *you* are writing grammars in questions 3 and 6, you should 
#      follow this convention unless you have a good reason not to.  
#
#    - But your *program* should still work with grammars that don't
#      follow this convention.  So how can your program reliably tell
#      the difference between terminal and nonterminal symbols?  If
#      there is at least one rule for rewriting a symbol, then that
#      symbol is a nonterminal and should be rewritten.
#######################

# Rules for creating full sentences.

3	ROOT	S .
1	ROOT	S !
0.5 ROOT	is it true that S ? # mixing terminals and nonterminals is ok.

# --- YES/NO QUESTIONS ---
1	ROOT	SQ ?
1	SQ	Aux NP VP_bare

# The basic grammar rules.  Here's what the abbreviations stand for:
#    S  = sentence
#    NP = noun phrase
#    VP = verb phrase
#    PP = prepositional phrase
#    Det = determiner (sometimes called "article")
#    Prep = preposition
#    Adj = adjective

1	S	NP VP
1	S	NP V_intrans

1	VP	Verb NP
1	VP	Verb Conj VP
0.01	VP	V_that S
0.01	VP	Verb NP VP
0.6	VP	Verb CP
0.8	VP	Verb NP CP
0.6	VP	V_intrans PP
0.4	VP	VP PP

0.1	VP	V_intrans

1	NP	Det Noun
0.3	NP	NP PP
0.5	NP	ProperNoun
1	NP	Noun
1	NP	NP Conj NP
0.5	NP	Pronoun            # so “it perplexed …” parses
0.6	NP	CP                 # clausal subject: “that S perplexed …”
1	NP	Det Adverb Noun

1	PP	Prep NP
4	Noun	Adj Noun


1	VP_bare	Verb_base NP
0.6	VP_bare	V_intrans_base
0.3	VP_bare	Verb_base
0.5	VP_bare	VP_bare Conj VP_bare
0.5	VP_bare	VP_bare PP
0.4	VP_bare	Verb_base CP
0.5	VP_bare	Verb_base NP CP

# --- Clausal complements / subjects ---
1	Comp	that
1	CP	Comp S

# Vocabulary.  Your program can see that "ate" is a terminal
# symbol because there exists no rule for rewriting it.
# Any symbol that can rewrite as a terminal (or a string of 
# terminals, like "chief of staff") is called a "preterminal."  Notice 
# that a preterminal is a special kind of nonterminal.

2	Verb	ate
2	Verb	wanted
1	Verb	kissed
2	Verb	understood
0.4	Verb	pickled
1	Verb	perplexed

1	V_intrans	sighed
1	V_intrans	thought
1	V_intrans	worked

1	V_that	thought that
1	V_that	said that

# --- Auxiliaries for questions ---
1	Aux	did
1	Aux	will
0.8	Aux	do
0.8	Aux	does

# --- Base-form for questions ---
1	Verb_base	eat
1	Verb_base	want
1	Verb_base	kiss
1	Verb_base	understand
0.4	Verb_base	pickle
1	Verb_base	perplex
1	Verb_base	think
1	V_intrans_base	sigh
1	V_intrans_base	work

1	Det	the
1	Det	a
0.7	Det	every
0.6	Det	that

1	Noun	president
1	Noun	sandwich
0.2	Noun	pickle
1	Noun	chief of staff
1	Noun	floor
1	Noun	proposal
1	Noun	desk

2	Adj	fine
2	Adj	delicious
1	Adj	perplexed
0.3	Adj	pickled
0.6	Adj	Adverb Adj

1	Prep	with
1	Prep	on
0.8	Prep	under
1	Prep	in

1	ProperNoun	Sally

1	Conj	and

1	Pronoun	it
1	Pronoun	he
1	Pronoun	she
1	Pronoun	they

1	Adverb	very
1	Adverb	Adverb Adj
